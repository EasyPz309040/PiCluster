apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pihole.fullname" . }}
  labels:
    {{- include "pihole.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pihole.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pihole.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
              - name: WEBPASSWORD
                valueFrom:
                    secretKeyRef:
                        name: {{ include "pihole.fullname" . }}
                        key: WEBPASSWORD
              - name: TZ
                valueFrom:
                    configMapKeyRef:
                        name: {{ include "pihole.fullname" . }}
                        key: TZ
              - name: DNS1
                valueFrom:
                    configMapKeyRef:
                        name: {{ include "pihole.fullname" . }}
                        key: DNS1
              - name: DNS2
                valueFrom:
                    configMapKeyRef:
                        name: {{ include "pihole.fullname" . }}
                        key: DNS2
          volumeMounts:
              - name: pihole-pvc
                mountPath: '/etc/pihole'
              - name: dnsmasq-pvc
                mountPath: '/etc/dnsmasq.d'
      restartPolicy: Always
      volumes:
          - name: pihole-pvc
            persistentVolumeClaim:
                claimName: {{ .Values.pv.namePiHole }}
          - name: dnsmasq-pvc
            persistentVolumeClaim:
                claimName: {{ .Values.pv.nameDnsmasq }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
